function e(r){var n,l,t="";if("string"==typeof r||"number"==typeof r)t+=r;else if("object"==typeof r)if(Array.isArray(r)){var a=r.length;for(n=0;n<a;n++)r[n]&&(l=e(r[n]))&&(t&&(t+=" "),t+=l)}else for(l in r)r[l]&&(t&&(t+=" "),t+=l);return t}function r(){for(var r,n,l=0,t="",a=arguments.length;l<a;l++)(r=arguments[l])&&(n=e(r))&&(t&&(t+=" "),t+=n);return t}const n=e=>"boolean"==typeof e?`${e}`:0===e?"0":e,l=r,t=(e,r)=>t=>{var a;if(null==(null==r?void 0:r.variants))return l(e,null==t?void 0:t.class,null==t?void 0:t.className);const{variants:s,defaultVariants:o}=r,u=Object.keys(s).map(e=>{const r=null==t?void 0:t[e],l=null==o?void 0:o[e];if(null===r)return null;const a=n(r)||n(l);return s[e][a]}),i=t&&Object.entries(t).reduce((e,r)=>{let[n,l]=r;return void 0===l||(e[n]=l),e},{}),c=null==r||null===(a=r.compoundVariants)||void 0===a?void 0:a.reduce((e,r)=>{let{class:n,className:l,...t}=r;return Object.entries(t).every(e=>{let[r,n]=e;return Array.isArray(n)?n.includes({...o,...i}[r]):{...o,...i}[r]===n})?[...e,n,l]:e},[]);return l(e,u,c,null==t?void 0:t.class,null==t?void 0:t.className)};export{t as a,r as c};
