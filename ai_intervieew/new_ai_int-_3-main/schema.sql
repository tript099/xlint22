-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.admin (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL UNIQUE,
  company_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  logs jsonb DEFAULT '[]'::jsonb,
  phone text,
  department text,
  is_primary_admin boolean DEFAULT false,
  CONSTRAINT admin_pkey PRIMARY KEY (id),
  CONSTRAINT admin_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT admin_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.candidates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL UNIQUE,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  logs jsonb DEFAULT '[]'::jsonb,
  phone text,
  resume_url text,
  resume_text text,
  skills jsonb DEFAULT '[]'::jsonb,
  experience_years integer CHECK (experience_years >= 0 AND experience_years <= 60),
  current_location text,
  willing_to_relocate boolean DEFAULT true,
  expected_salary numeric CHECK (expected_salary > 0::numeric),
  currency character varying DEFAULT 'USD'::character varying,
  availability_date date,
  ai_score numeric CHECK (ai_score >= 0::numeric AND ai_score <= 100::numeric),
  ai_summary text,
  background_check_status USER-DEFINED DEFAULT 'not_required'::background_check_status,
  background_check_remarks text,
  background_check_report_link text,
  free_slots jsonb DEFAULT '[]'::jsonb,
  linkedin_url text,
  portfolio_url text,
  CONSTRAINT candidates_pkey PRIMARY KEY (id),
  CONSTRAINT candidates_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.companies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  description text,
  industry text,
  size_range text CHECK (size_range = ANY (ARRAY['1-10'::text, '11-50'::text, '51-200'::text, '201-500'::text, '501-1000'::text, '1000+'::text])),
  website text CHECK (website IS NULL OR website ~* '^https?://.+'::text),
  logo_url text,
  address text,
  country text NOT NULL,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  commission_rate numeric NOT NULL DEFAULT 0.00 CHECK (commission_rate >= 0::numeric AND commission_rate <= 100::numeric),
  CONSTRAINT companies_pkey PRIMARY KEY (id)
);
CREATE TABLE public.interview_schedules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  interview_round_id uuid NOT NULL,
  job_application_id uuid NOT NULL,
  assigned_interviewers jsonb NOT NULL DEFAULT '[]'::jsonb,
  external_interviewers jsonb DEFAULT '[]'::jsonb,
  interview_type USER-DEFINED NOT NULL,
  scheduled_at timestamp with time zone NOT NULL,
  duration_minutes integer NOT NULL CHECK (duration_minutes > 0),
  meeting_urls jsonb DEFAULT '{}'::jsonb,
  meeting_room text,
  status USER-DEFINED NOT NULL DEFAULT 'scheduled'::schedule_status,
  ai_score numeric CHECK (ai_score >= 0::numeric AND ai_score <= 100::numeric),
  ai_review jsonb DEFAULT '{}'::jsonb,
  interviewer_scores jsonb DEFAULT '{}'::jsonb,
  interviewer_notes jsonb DEFAULT '{}'::jsonb,
  consolidated_feedback jsonb DEFAULT '{}'::jsonb,
  final_recommendation text CHECK (final_recommendation = ANY (ARRAY['strong_hire'::text, 'hire'::text, 'no_hire'::text, 'strong_no_hire'::text])),
  recording_url text,
  recording_consent_given boolean DEFAULT false,
  interview_notes text,
  technical_assessment_url text,
  ai_interview_enabled boolean NOT NULL DEFAULT false,
  ai_interviewer_config jsonb DEFAULT '{}'::jsonb,
  conversation_log jsonb DEFAULT '[]'::jsonb,
  final_ai_evaluation_score numeric CHECK (final_ai_evaluation_score >= 0::numeric AND final_ai_evaluation_score <= 100::numeric),
  final_ai_review text,
  started_at timestamp with time zone,
  ended_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  logs jsonb DEFAULT '[]'::jsonb,
  rescheduled_from uuid,
  rescheduled_reason text,
  company_id uuid,
  interview_title text,
  live_transcript jsonb DEFAULT '[]'::jsonb,
  supervisor_actions jsonb DEFAULT '[]'::jsonb,
  supervisor_config jsonb DEFAULT '{"enabled": true, "analysis_interval": 30, "max_duration_minutes": 35, "conclusion_trigger_minutes": 25}'::jsonb,
  auto_completion_reason text,
  CONSTRAINT interview_schedules_pkey PRIMARY KEY (id),
  CONSTRAINT interview_schedules_rescheduled_from_fkey FOREIGN KEY (rescheduled_from) REFERENCES public.interview_schedules(id),
  CONSTRAINT interview_schedules_job_application_id_fkey FOREIGN KEY (job_application_id) REFERENCES public.job_applications(id),
  CONSTRAINT interview_schedules_interview_round_id_fkey FOREIGN KEY (interview_round_id) REFERENCES public.interviews(id)
);
CREATE TABLE public.interviewers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL UNIQUE,
  company_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  logs jsonb DEFAULT '[]'::jsonb,
  phone text,
  free_slots jsonb DEFAULT '{"timezone": "UTC", "free_slots": [], "preferences": {"blackout_dates": [], "preferred_times": {}, "max_interviews_per_day": 5, "interview_type_preferences": {}, "min_break_between_interviews": 15}, "last_updated": null, "blocked_slots": [], "occupied_slots": [], "scheduling_rules": {"weekend_availability": false, "auto_accept_within_hours": 48, "allow_back_to_back_interviews": false, "max_concurrent_tentative_slots": 3, "requires_confirmation_if_less_than_hours": 24}, "default_working_hours": {"friday": [], "monday": [], "sunday": [], "tuesday": [], "saturday": [], "thursday": [], "wednesday": []}}'::jsonb,
  expertise_areas jsonb DEFAULT '[]'::jsonb,
  seniority_level USER-DEFINED DEFAULT 'mid'::experience_level,
  is_technical_interviewer boolean DEFAULT true,
  is_hr_interviewer boolean DEFAULT false,
  max_interviews_per_day integer DEFAULT 5 CHECK (max_interviews_per_day > 0),
  timezone text DEFAULT 'UTC'::text,
  CONSTRAINT interviewers_pkey PRIMARY KEY (id),
  CONSTRAINT interviewers_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id),
  CONSTRAINT interviewers_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.interviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_id uuid NOT NULL,
  round_type USER-DEFINED NOT NULL,
  round_number integer NOT NULL CHECK (round_number > 0),
  scoring_criteria jsonb NOT NULL DEFAULT '{}'::jsonb,
  duration_minutes integer NOT NULL CHECK (duration_minutes > 0 AND duration_minutes <= 480),
  interviewers_required integer DEFAULT 1 CHECK (interviewers_required > 0),
  interviewer_profiles jsonb DEFAULT '[]'::jsonb,
  is_ai_assisted boolean DEFAULT false,
  is_mandatory boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT interviews_pkey PRIMARY KEY (id),
  CONSTRAINT interviews_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.job_applications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_id uuid NOT NULL,
  candidate_id uuid NOT NULL,
  vendor_id uuid,
  status USER-DEFINED DEFAULT 'applied'::application_status,
  screening_score numeric CHECK (screening_score >= 0::numeric AND screening_score <= 100::numeric),
  ai_screening_notes text,
  cover_letter text,
  applied_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  logs jsonb DEFAULT '[]'::jsonb,
  rejection_reason text,
  interview_feedback jsonb DEFAULT '{}'::jsonb,
  final_score numeric CHECK (final_score >= 0::numeric AND final_score <= 100::numeric),
  company_id uuid,
  CONSTRAINT job_applications_pkey PRIMARY KEY (id),
  CONSTRAINT job_applications_candidate_id_fkey FOREIGN KEY (candidate_id) REFERENCES public.candidates(id),
  CONSTRAINT job_applications_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id),
  CONSTRAINT fk_company FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT job_applications_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  created_by uuid NOT NULL,
  title text NOT NULL,
  description text,
  ai_generated_description text,
  requirements jsonb DEFAULT '[]'::jsonb,
  skills_required jsonb DEFAULT '[]'::jsonb,
  experience_level USER-DEFINED,
  employment_type USER-DEFINED,
  location text,
  remote_allowed boolean DEFAULT false,
  salary_min numeric CHECK (salary_min > 0::numeric),
  salary_max numeric CHECK (salary_max > 0::numeric),
  currency character varying DEFAULT 'USD'::character varying,
  budget_recommendation jsonb,
  status USER-DEFINED DEFAULT 'draft'::job_status,
  expires_at timestamp with time zone,
  total_positions integer DEFAULT 1 CHECK (total_positions > 0),
  filled_positions integer DEFAULT 0 CHECK (filled_positions >= 0),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  interview_rounds integer DEFAULT 1 CHECK (interview_rounds > 0 AND interview_rounds <= 10),
  interview_types jsonb DEFAULT '[]'::jsonb,
  scoring_criteria jsonb DEFAULT '{}'::jsonb,
  department text,
  is_urgent boolean DEFAULT false,
  min_assessment_score integer,
  CONSTRAINT jobs_pkey PRIMARY KEY (id),
  CONSTRAINT jobs_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT jobs_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.offer_templates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  created_by uuid NOT NULL,
  template_name text NOT NULL,
  template_content jsonb NOT NULL,
  template_link text,
  country text NOT NULL,
  is_validated boolean DEFAULT false,
  validation_notes text,
  job_role text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  logs jsonb DEFAULT '[]'::jsonb,
  is_default boolean DEFAULT false,
  template_version integer DEFAULT 1,
  CONSTRAINT offer_templates_pkey PRIMARY KEY (id),
  CONSTRAINT offer_templates_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT offer_templates_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);
CREATE TABLE public.offer_workflow (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_application_id uuid NOT NULL UNIQUE,
  current_step USER-DEFINED,
  status USER-DEFINED DEFAULT 'pending'::workflow_status,
  created_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  background_check_status USER-DEFINED DEFAULT 'not_required'::background_check_status,
  background_check_provider text,
  background_check_reference_id text,
  background_check_result jsonb DEFAULT '{}'::jsonb,
  background_check_completed_at timestamp with time zone,
  offer_generated_at timestamp with time zone,
  offer_template_id uuid,
  generated_offer_content text,
  offer_details jsonb DEFAULT '{}'::jsonb,
  hr_approval_status USER-DEFINED DEFAULT 'pending'::hr_approval_status,
  hr_approved_by uuid,
  hr_approved_at timestamp with time zone,
  hr_comments text,
  sent_to_candidate_at timestamp with time zone,
  candidate_notification_sent boolean DEFAULT false,
  offer_letter_url text,
  candidate_response USER-DEFINED,
  candidate_response_at timestamp with time zone,
  candidate_comment text,
  final_offer_amount numeric CHECK (final_offer_amount > 0::numeric),
  final_offer_currency character varying DEFAULT 'USD'::character varying,
  workflow_completed_at timestamp with time zone,
  notes text,
  logs jsonb DEFAULT '[]'::jsonb,
  estimated_completion_date date,
  priority_level integer DEFAULT 3 CHECK (priority_level >= 1 AND priority_level <= 5),
  applicant_id uuid,
  CONSTRAINT offer_workflow_pkey PRIMARY KEY (id),
  CONSTRAINT offer_workflow_job_application_id_fkey FOREIGN KEY (job_application_id) REFERENCES public.job_applications(id),
  CONSTRAINT offer_workflow_applicant_id_fkey FOREIGN KEY (applicant_id) REFERENCES public.candidates(id),
  CONSTRAINT offer_workflow_hr_approved_by_fkey FOREIGN KEY (hr_approved_by) REFERENCES public.profiles(id),
  CONSTRAINT offer_workflow_offer_template_id_fkey FOREIGN KEY (offer_template_id) REFERENCES public.offer_templates(id),
  CONSTRAINT offer_workflow_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id)
);
CREATE TABLE public.offers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_application_id uuid NOT NULL UNIQUE,
  salary_amount numeric NOT NULL CHECK (salary_amount > 0::numeric),
  currency character varying NOT NULL DEFAULT 'USD'::character varying,
  benefits jsonb DEFAULT '[]'::jsonb,
  start_date date CHECK (start_date IS NULL OR start_date >= CURRENT_DATE),
  offer_letter_url text,
  status USER-DEFINED DEFAULT 'draft'::offer_status,
  expires_at timestamp with time zone,
  sent_at timestamp with time zone,
  responded_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  logs jsonb DEFAULT '[]'::jsonb,
  negotiation_history jsonb DEFAULT '[]'::jsonb,
  signing_bonus numeric DEFAULT 0,
  equity_percentage numeric,
  probation_period_months integer DEFAULT 3 CHECK (probation_period_months >= 0),
  notice_period_days integer DEFAULT 30 CHECK (notice_period_days >= 0),
  CONSTRAINT offers_pkey PRIMARY KEY (id),
  CONSTRAINT offers_job_application_id_fkey FOREIGN KEY (job_application_id) REFERENCES public.job_applications(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email text NOT NULL CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
  first_name text,
  last_name text,
  role USER-DEFINED,
  company_name text,
  phone text,
  avatar_url text,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid,
  vendor_id uuid,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT profiles_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.profiles(id),
  CONSTRAINT profiles_vendor_id_fkey FOREIGN KEY (vendor_id) REFERENCES public.vendors(id)
);
CREATE TABLE public.super_admin (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid NOT NULL UNIQUE,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  logs jsonb DEFAULT '[]'::jsonb,
  phone text,
  permissions jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT super_admin_pkey PRIMARY KEY (id),
  CONSTRAINT super_admin_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.vendors (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  profile_id uuid UNIQUE,
  company_id uuid NOT NULL,
  vendor_name text NOT NULL,
  spoc_name text,
  spoc_phone text,
  spoc_email text NOT NULL CHECK (spoc_email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  logs jsonb DEFAULT '[]'::jsonb,
  is_active boolean DEFAULT true,
  specialization jsonb DEFAULT '[]'::jsonb,
  success_rate numeric CHECK (success_rate >= 0::numeric AND success_rate <= 100::numeric),
  average_time_to_fill integer CHECK (average_time_to_fill > 0),
  commission_rate numeric CHECK (commission_rate >= 0::numeric AND commission_rate <= 100::numeric),
  contract_start_date date,
  contract_end_date date,
  CONSTRAINT vendors_pkey PRIMARY KEY (id),
  CONSTRAINT vendors_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id),
  CONSTRAINT vendors_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id)
);